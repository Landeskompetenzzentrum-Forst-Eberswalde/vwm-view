# docker-compose.yml
 
version: '3'

services:

  postgrest:
    restart: always
    image: "postgrest/postgrest:v12.0.2"
    ports:
      - "3000:3000"
    links:
      - postgres:postgres
    environment:
      PGRST_DB_URI: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/postgres"
      PGRST_DB_SCHEMA: api
      PGRST_DB_ANON_ROLE: web_anon
      PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
      PGRST_DB_PRE_CONFIG: "postgrest.pre_config"

    depends_on:
      - postgres

  postgres:
    restart: always
    image: "postgres:16.2"
    ports:
        - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

      POSTGRES_EXTENSIONS: pgcrypto, pgjwt

    volumes:
      - ./pgjwt/extension/pgjwt.control:/usr/share/postgresql/16/extension/pgjwt.control
      - ./pgjwt/extension/pgjwt--0.2.0-tfm.sql:/usr/share/postgresql/16/extension/pgjwt--0.2.0.sql

      - ./pgcrypto.sql:/docker-entrypoint-initdb.d/pgcrypto.sql


      - ./ci2027-db-structure/globals.sql:/docker-entrypoint-initdb.d/10-globals.sql

      - ./ci2027-db-structure/structure.sql:/docker-entrypoint-initdb.d/20-structure.sql

      - ./start_replication.sql:/docker-entrypoint-initdb.d/zy-start_replication.sql
      - ./ci2027-db-data/data.sql:/docker-entrypoint-initdb.d/zz-data.sql

      - ./postgrest-config.sql:/docker-entrypoint-initdb.d/11-postgrest.sql

      - ./schema/structure.sql:/docker-entrypoint-initdb.d/90-structure.sql
      - ./schema/view.sql:/docker-entrypoint-initdb.d/91-view.sql
      - ./schema/data.sql:/docker-entrypoint-initdb.d/92-data.sql

      - ./pgdata:/docker-entrypoint-initdb.d

  pgadmin:
    restart: always
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        PGADMIN_LISTEN_PORT: 80
    ports:
        - "5050:80"
    links:
        - "postgres:TFM"
    depends_on:
      - postgrest

  swagger:
    restart: always
    image: swaggerapi/swagger-ui
    ports:
        - "8080:8080"
    expose:
        - "8080"
    environment:
        API_URL: http://127.0.0.1:3000/
    depends_on:
      - postgrest