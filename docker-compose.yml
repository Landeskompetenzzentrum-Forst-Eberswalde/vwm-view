# docker-compose.yml
 
version: '3'

services:

  server:
    image: "postgrest/postgrest:${POSTGREST_VERSION}"
    ports:
      - "3000:3000"
    links:
      - db:db
    environment:
      PGRST_DB_URI: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/postgres"
      PGRST_DB_SCHEMA: public
      PGRST_DB_ANON_ROLE: ${POSTGRES_USER} #In production this role should not be the same as the one used for the connection
      PGRST_SERVER_PROXY_URI: "http://127.0.0.1:3000"
    depends_on:
      - db

  db:
    image: "postgres:${POSTGRES_VERSION}"
    ports:
        - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}

      POSTGRES_DB: "BWI_${VERSION}${VERSION_POSTFIX}" # name for the default database
      
      #PGDATA: /var/lib/postgresql/data
      #POSTGRES_INITDB_ARGS: "--auth-host=md5 --auth-local=md5" #This is not needed if you are using a .env file
    #volumes:
    #    - ./db-data:/var/lib/postgresql/data
    #    - ./setup-db/create-tables.sql:/docker-entrypoint-initdb.d/create-tables.sql
    #    - ./setup-db/data.sql:/docker-entrypoint-initdb.d/data.sql

  #pgadmin:
  #  container_name: pgadmin4_container
  #  image: dpage/pgadmin4
  #  restart: always
  #  environment:
  #      PGADMIN_DEFAULT_EMAIL: default@email.com
  #      PGADMIN_DEFAULT_PASSWORD: defaultSecret
  #      PGADMIN_LISTEN_PORT: 80
  #  ports:
  #      - "5050:80"
  #  links:
  #      - "db:pgsql-server"
  #  volumes:
  #      - pgadmin-data:/var/lib/pgadmin
  #
  #swagger:
  #  image: swaggerapi/swagger-ui
  #  ports:
  #      - "8080:8080"
  #  expose:
  #      - "8080"
  #  environment:
  #      API_URL: http://127.0.0.1:3000/      

#volumes:
#    db-data:
#    pgadmin-data: