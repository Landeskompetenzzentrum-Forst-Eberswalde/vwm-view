name: Docker Compose Actions Workflow

on: push

jobs:

  test:
  
    runs-on: ubuntu-latest
    
    steps:
      # https://github.com/orgs/community/discussions/28672
      - name: Check out repository code
        uses: actions/checkout@v4
        

      - name: clone submodule Data
        uses: actions/checkout@v4
        #with:
        #  github-server-url: 'https://git-dmz.thuenen.de/'
        #  repository: datenerfassungci2027/ci2027_datenerfassung/ci2027-db-data
        #  path: ci2027-db-data
        #  ssh-key: ${{ secrets.GITLAB_TOKEN }}
        #  persist-credentials: true

      - name: Clone data
        run: 'git clone "https://${{ secrets.GITLAB_USERNAME }}:${{ secrets.GITLAB_TOKEN }}@git-dmz.thuenen.de/datenerfassungci2027/ci2027_datenerfassung/ci2027-db-data.git" ci2027-db-data'
      - name: Clone data
        run: 'git clone "https://${{ secrets.GITLAB_USERNAME }}:${{ secrets.GITLAB_TOKEN }}@git-dmz.thuenen.de/datenerfassungci2027/ci2027_datenerfassung/ci2027-db-structure.git" ci2027-db-structure'
        
      - name: Build the stack
        run: docker-compose --env-file _.env up -d

      - name: Install dependencies
        run: npm ci
        
      - name: Connect to PostgreSQL
        # Runs a script that creates a PostgreSQL table, populates
        # the table with data, and then retrieves the data
        run: node test/basic.js
        # Environment variables used by the `client.js` script to create
        # a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
